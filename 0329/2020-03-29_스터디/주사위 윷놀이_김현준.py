youth = [                               # 각 윷 위치를 0부터 32까지 다시 순서를 부여
[0, 1, 2, 3, 4, 5],                     # [원래 문제 위치 숫자, 1다음 숫자, 2다음 숫자, 3다음 숫자, 4다음 숫자, 5다음 숫자]
[2, 2, 3, 4, 5, 6],
[4, 3, 4, 5, 6, 7],
[6, 4, 5, 6, 7, 8],
[8, 5, 6, 7, 8, 9],
[10, 21, 22, 23, 24, 30],
[12, 7, 8, 9, 10, 11],
[14, 8, 9, 10, 11, 12],
[16, 9, 10, 11, 12, 13],
[18, 10, 11, 12, 13, 14],
[20, 25, 26, 24, 30, 31],
[22, 12, 13, 14, 15, 16],
[24, 13, 14, 15, 16, 17],
[26, 14, 15, 16, 17, 18],
[28, 15, 16, 17, 18, 19],
[30, 27, 28, 29, 24, 30],
[32, 17, 18, 19, 20, 32],
[34, 18, 19, 20, 32, 32],
[36, 19, 20, 32, 32, 32],
[38, 20, 32, 32, 32, 32],
[40, 32, 32, 32, 32, 32],
[13, 22, 23, 24, 30, 31],
[16, 23, 24, 30, 31, 20],
[19, 24, 30, 31, 20, 32],
[25, 30, 31, 20, 32, 32],
[22, 26, 24, 30, 31, 20],
[24, 24, 30, 31, 20, 32],
[28, 28, 29, 24, 30, 31],
[27, 29, 24, 30, 31, 20],
[26, 24, 30, 31, 20, 32],
[30, 31, 20, 32, 32, 32],
[35, 20, 32, 32, 32, 32],
[0]
]

def perm(k):
    global ans, result
    if k==10:               # 10번 모두 움직이면
        if result > ans:        # 점수 비교
            ans = result
    else:
        if not horses or (len(horses) < 4 and 0 not in horses):     # 모든 말이 한 번도 안 움직였거나 4개 미만 말만 움직였을 경우 새로운 말이 출발할 수 있으므로 0 추가
            horses.append(0)
        for h in range(len(horses)):            # 현재 움직일 수 있는 말들 모두 탐색
            if horses[h]!=32:                   # 도착점에 있는 말을 움직이지 않는다(도착점:32번)
                if move(h, dice[k]):            # 말이 겹치지 않게 움직일 수 있으면
                    save = horses[h]            # 백트래킹을 위해 현재 말 위치 저장
                    horses[h] = youth[horses[h]][dice[k]]   # 문제 입력에 따른 말의 다음 위치
                    result += youth[horses[h]][0]           # 움직인 위치의 점수를 더해준다
                    perm(k+1)                               # 재귀
                    result -= youth[horses[h]][0]           # 백트래킹, 더해줬던 점수를 뺴준다
                    horses[h] = save                        # 움직였던 말은 다시 원위치

def move(h, i):
    nextposition = youth[horses[h]][i]  # 다음 말의 위치
    if nextposition==32 or nextposition not in horses:  # 말이 도착점에 도착하거나, 다음 위치에 말이 없으면
        return True

dice = list(map(int, input().split()))
result, ans = 0, 0
horses = []     # 말들의 위치 저장
perm(0)
print(ans)