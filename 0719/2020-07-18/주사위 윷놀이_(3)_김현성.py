def dfs(h, idx, score, y):
    global maxV
    dice = jusawi[idx] - 1  # 주사위 이동
    horses = y.copy()
    horses[h] = game[horses[h]][dice]  # 말의 위치
    score += score_dic[horses[h]]     # 점수 업데이트

    if idx == 9:
        maxV = max(score, maxV)
        return
    else:
        for new_h in range(4):  # 말 고르기
            next_dice = jusawi[idx + 1] - 1  # 다음 주사위 이동
            # 말이 도착지점에 있으면 더 이상 움직일 필요가 없음
            if horses[new_h] == 32:
                continue
            # 도착지점에 있는게 아닌데 이미 말이 있어서 갈 수 없으면 더 진행 안함
            if game[horses[new_h]][next_dice] != 32 and game[horses[new_h]][next_dice] in horses:
                continue
            dfs(new_h, idx + 1, score, horses)


# 게임판 인덱스별 점수
score_dic = {
    0: 0, 1: 2, 2: 4, 3: 6, 4: 8, 5: 10, 6: 12, 7: 14, 8: 16,
    9: 18, 10: 20, 11: 22, 12: 24, 13: 26, 14: 28, 15: 30, 16: 32,
    17: 34, 18: 36, 19: 38, 20: 13, 21: 16, 22: 19, 23: 25, 24: 26,
    25: 27, 26: 28, 27: 22, 28: 24, 29: 30, 30: 35, 31: 40, 32: 0
}

# 각 위치에서 주사위를 던졌을 때, 갈 수 있는 위치
game = {
    0: [1, 2, 3, 4, 5],
    1: [2, 3, 4, 5, 6],
    2: [3, 4, 5, 6, 7],
    3: [4, 5, 6, 7, 8],
    4: [5, 6, 7, 8, 9],
    5: [20, 21, 22, 23, 29],
    6: [7, 8, 9, 10, 11],
    7: [8, 9, 10, 11, 12],
    8: [9, 10, 11, 12, 13],
    9: [10, 11, 12, 13, 14],
    10: [27, 28, 23, 29, 30],
    11: [12, 13, 14, 15, 16],
    12: [13, 14, 15, 16, 17],
    13: [14, 15, 16, 17, 18],
    14: [15, 16, 17, 18, 19],
    15: [26, 25, 24, 23, 29],
    16: [17, 18, 19, 31, 32],
    17: [18, 19, 31, 32, 32],
    18: [19, 31, 32, 32, 32],
    19: [31, 32, 32, 32, 32],
    20: [21, 22, 23, 29, 30],
    21: [22, 23, 29, 30, 31],
    22: [23, 29, 30, 31, 32],
    23: [29, 30, 31, 32, 32],
    24: [23, 29, 30, 31, 32],
    25: [24, 23, 29, 30, 31],
    26: [25, 24, 23, 29, 30],
    27: [28, 23, 29, 30, 31],
    28: [23, 29, 30, 31, 32],
    29: [30, 31, 32, 32, 32],
    30: [31, 32, 32, 32, 32],
    31: [32, 32, 32, 32, 32]
}

jusawi = list(map(int, input().split()))
horses = [0, 0, 0, 0]
maxV = 0

dfs(0, 0, 0, [0, 0, 0, 0])
print(maxV)